buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.2'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://maven.google.com" }
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.EricssonBroadcastServices'

ext {
    exoPlayerVersion = '2.7.0'
    releasePlayerName = 'EMPPlayer'
    releaseArtifact = 'fluxplayer-playback'
    releaseVersion = 'v2.0.84'
    releaseDescription = 'The EMP Player library playback module.'
    libraryTag = 'r2.0.89'
    lightweight = { -> return false }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            resValue "string", "exoplayer_version", project.ext.exoPlayerVersion
            resValue "string", "emplayer_version", project.ext.releaseVersion
            resValue "string", "emplayer_name", project.ext.releasePlayerName
        }
        release {
            resValue "string", "exoplayer_version", project.ext.exoPlayerVersion
            resValue "string", "emplayer_version", project.ext.releaseVersion
            resValue "string", "emplayer_name", project.ext.releasePlayerName
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
    // Lightweight build removes EMP factory
    if (lightweight()) {
        sourceSets {
            main {
                java {
                    exclude '**/factories/EMPPlayerFactory.java'
                    exclude '**/ui/**'
//                    exclude '**/techs/**'     // uncomment for build with no techs
//                    exclude '**/drm/**'       // uncomment for build with no techs
                }
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:design:26.1.0"
    compile "com.google.android.exoplayer:exoplayer:${project.ext.exoPlayerVersion}"
    compile 'com.android.support:support-core-utils:26.0.1'
    compile 'joda-time:joda-time:2.9.4'
    if (project.hasProperty('hasParentProject')) {
        compile project(':libraries:utilities')
        if (lightweight() == false) {
            compile project(':libraries:cast')
            compile project(':libraries:analytics')
        }
    }
    else {
        compile "com.github.EricssonBroadcastServices:AndroidClientUtilities:${project.ext.libraryTag}"
        if (lightweight() == false) {
            compile "com.github.EricssonBroadcastServices:AndroidClientCast:${project.ext.libraryTag}"
            compile "com.github.EricssonBroadcastServices:AndroidClientAnalytics:${project.ext.libraryTag}"
        }
    }

    // Test Dependencies
    testCompile "org.robolectric:shadows-playservices:3.6.1"
    compile 'com.android.support:design:26.0.1'
    testCompile "org.mockito:mockito-core:2.+"
    testCompile "org.robolectric:robolectric:3.5.1"
    testCompile 'junit:junit:4.12'
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: 'https://raw.githubusercontent.com/EricssonBroadcastServices/AndroidClientUtilities/master/jacoco.gradle'
